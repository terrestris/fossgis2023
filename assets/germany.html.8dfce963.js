import{bO as D,bP as H,r as W,bj as X,A as U,bQ as V,aL as B,g as Y,aE as Z,H as Q}from"./Source.c163b9e6.js";import{D as J,T as ee}from"./WebGLTile.a5c2c146.js";import{d as te}from"./TileEventType.49efe80f.js";import{_ as ne,g as oe,f as se,a as re,b as ie,p as ae}from"./geotiff.210436ae.js";import"./BaseTile.e3ca4c27.js";const le=typeof navigator<"u"&&navigator.hardwareConcurrency||2;class ce{constructor(e=le,t){this.workers=null,this._awaitingDecoder=null,this.size=e,this.messageId=0,e&&(this._awaitingDecoder=t?Promise.resolve(t):new Promise(o=>{ne(()=>import("./decoder.f53bb359.js"),[],import.meta.url).then(s=>{o(s.create)})}),this._awaitingDecoder.then(o=>{this._awaitingDecoder=null,this.workers=[];for(let s=0;s<e;s++)this.workers.push({worker:o(),idle:!0})}))}async decode(e,t){return this._awaitingDecoder&&await this._awaitingDecoder,this.size===0?oe(e).then(o=>o.decode(e,t)):new Promise(o=>{const s=this.workers.find(p=>p.idle)||this.workers[Math.floor(Math.random()*this.size)];s.idle=!1;const a=this.messageId++,i=p=>{p.data.id===a&&(s.idle=!0,o(p.data.decoded),s.worker.removeEventListener("message",i))};s.worker.addEventListener("message",i),s.worker.postMessage({fileDirectory:e,buffer:t,id:a},[t])})}destroy(){this.workers&&(this.workers.forEach(e=>{e.worker.terminate()}),this.workers=null)}}const ue=ce;function de(n){return((n.fileDirectory.NewSubfileType||0)&4)===4}function he(n,e){if(!n)return!1;if(n===!0)return!0;if(e.getSamplesPerPixel()!==3)return!1;const t=e.fileDirectory.PhotometricInterpretation,o=ae;return t===o.CMYK||t===o.YCbCr||t===o.CIELab||t===o.ICCLab}const L="STATISTICS_MAXIMUM",K="STATISTICS_MINIMUM",j=256;let E;function fe(){return E||(E=new ue),E}function ge(n){try{return n.getBoundingBox()}catch{return[0,0,n.getWidth(),n.getHeight()]}}function me(n){try{return n.getOrigin().slice(0,2)}catch{return[0,n.getHeight()]}}function pe(n,e){try{return n.getResolution(e)}catch{return[e.getWidth()/n.getWidth(),e.getHeight()/n.getHeight()]}}function _e(n){const e=n.geoKeys;if(!e)return null;if(e.ProjectedCSTypeGeoKey&&e.ProjectedCSTypeGeoKey!==32767){const t="EPSG:"+e.ProjectedCSTypeGeoKey;let o=U(t);if(!o){const s=V(e.ProjLinearUnitsGeoKey);s&&(o=new B({code:t,units:s}))}return o}if(e.GeographicTypeGeoKey&&e.GeographicTypeGeoKey!==32767){const t="EPSG:"+e.GeographicTypeGeoKey;let o=U(t);if(!o){const s=V(e.GeogAngularUnitsGeoKey);s&&(o=new B({code:t,units:s}))}return o}return null}function we(n){return n.getImageCount().then(function(e){const t=new Array(e);for(let o=0;o<e;++o)t[o]=n.getImage(o);return Promise.all(t)})}function ye(n,e){let t;return n.blob?t=se(n.blob):n.overviews?t=re(n.url,n.overviews,e):t=ie(n.url,e),t.then(we)}function C(n,e,t,o,s){if(Array.isArray(n)){const a=n.length;if(!Array.isArray(e)||a!=e.length){const i=new Error(o);throw s(i),i}for(let i=0;i<a;++i)C(n[i],e[i],t,o,s);return}if(e=e,Math.abs(n-e)>t*n)throw new Error(o)}function Ie(n){return n instanceof Int8Array?-128:n instanceof Int16Array?-32768:n instanceof Int32Array?-2147483648:n instanceof Float32Array?12e-39:0}function be(n){return n instanceof Int8Array?127:n instanceof Uint8Array||n instanceof Uint8ClampedArray?255:n instanceof Int16Array?32767:n instanceof Uint16Array?65535:n instanceof Int32Array?2147483647:n instanceof Uint32Array?4294967295:n instanceof Float32Array?34e37:255}class $ extends J{constructor(e){super({state:"loading",tileGrid:null,projection:null,opaque:e.opaque,transition:e.transition,interpolate:e.interpolate!==!1,wrapX:e.wrapX}),this.sourceInfo_=e.sources;const t=this.sourceInfo_.length;this.sourceOptions_=e.sourceOptions,this.sourceImagery_=new Array(t),this.sourceMasks_=new Array(t),this.resolutionFactors_=new Array(t),this.samplesPerPixel_,this.nodataValues_,this.metadata_,this.normalize_=e.normalize!==!1,this.addAlpha_=!1,this.error_=null,this.convertToRGB_=e.convertToRGB||!1,this.setKey(this.sourceInfo_.map(a=>a.url).join(","));const o=this,s=new Array(t);for(let a=0;a<t;++a)s[a]=ye(this.sourceInfo_[a],this.sourceOptions_);Promise.all(s).then(function(a){o.configure_(a)}).catch(function(a){D(a),o.error_=a,o.setState("error")})}getError(){return this.error_}determineProjection(e){const t=e[0];for(let o=t.length-1;o>=0;--o){const s=t[o],a=_e(s);if(a){this.projection=a;break}}}configure_(e){let t,o,s,a,i;const p=new Array(e.length),T=new Array(e.length),b=new Array(e.length);let u=0;const w=e.length;for(let r=0;r<w;++r){const f=[],l=[];e[r].forEach(d=>{de(d)?l.push(d):f.push(d)});const c=f.length;if(l.length>0&&l.length!==c)throw new Error(`Expected one mask per image found ${l.length} masks and ${c} images`);let _,m;const v=new Array(c),M=new Array(c),h=new Array(c);T[r]=new Array(c),b[r]=new Array(c);for(let d=0;d<c;++d){const g=f[d],P=g.getGDALNoData();b[r][d]=g.getGDALMetadata(0),T[r][d]=P;const x=this.sourceInfo_[r].bands;p[r]=x?x.length:g.getSamplesPerPixel();const k=c-(d+1);_||(_=ge(g)),m||(m=me(g));const G=pe(g,f[0]);h[k]=G[0];const S=[g.getTileWidth(),g.getTileHeight()];S[0]!==S[1]&&S[1]<j&&(S[0]=j,S[1]=j),v[k]=S;const q=G[0]/Math.abs(G[1]);M[k]=[S[0],S[1]/q]}if(t?Y(t,_,t):t=_,!o)o=m;else{const d=`Origin mismatch for source ${r}, got [${m}] but expected [${o}]`;C(o,m,0,d,this.viewRejector)}if(!i)i=h,this.resolutionFactors_[r]=1;else{i.length-u>h.length&&(u=i.length-h.length);const d=i[i.length-1]/h[h.length-1];this.resolutionFactors_[r]=d;const g=h.map(x=>x*=d),P=`Resolution mismatch for source ${r}, got [${g}] but expected [${i}]`;C(i.slice(u,i.length),g,.02,P,this.viewRejector)}s?C(s.slice(u,s.length),M,.01,`Tile size mismatch for source ${r}`,this.viewRejector):s=M,a?C(a.slice(u,a.length),v,0,`Tile size mismatch for source ${r}`,this.viewRejector):a=v,this.sourceImagery_[r]=f.reverse(),this.sourceMasks_[r]=l.reverse()}for(let r=0,f=this.sourceImagery_.length;r<f;++r){const l=this.sourceImagery_[r];for(;l.length<i.length;)l.unshift(void 0)}this.getProjection()||this.determineProjection(e),this.samplesPerPixel_=p,this.nodataValues_=T,this.metadata_=b;e:for(let r=0;r<w;++r){if(this.sourceInfo_[r].nodata!==void 0){this.addAlpha_=!0;break}if(this.sourceMasks_[r].length){this.addAlpha_=!0;break}const f=T[r],l=this.sourceInfo_[r].bands;if(l){for(let c=0;c<l.length;++c)if(f[l[c]-1]!==null){this.addAlpha_=!0;break e}continue}for(let c=0;c<f.length;++c)if(f[c]!==null){this.addAlpha_=!0;break e}}let A=this.addAlpha_?1:0;for(let r=0;r<w;++r)A+=p[r];this.bandCount=A;const y=new te({extent:t,minZoom:u,origin:o,resolutions:i,tileSizes:s});this.tileGrid=y,this.setTileSizes(a),this.setLoader(this.loadTile_.bind(this)),this.setState("ready");const I=1;i.length===2?i=[i[0],i[1],i[1]/2]:i.length===1&&(i=[i[0]*2,i[0],i[0]/2]),this.viewResolver({showFullExtent:!0,projection:this.projection,resolutions:i,center:H(W(t),this.projection),extent:X(t,this.projection),zoom:I})}loadTile_(e,t,o){const s=this.getTileSize(e),a=this.sourceImagery_.length,i=new Array(a*2),p=this.nodataValues_,T=this.sourceInfo_,b=fe();for(let u=0;u<a;++u){const w=T[u],A=this.resolutionFactors_[u],y=[Math.round(t*(s[0]*A)),Math.round(o*(s[1]*A)),Math.round((t+1)*(s[0]*A)),Math.round((o+1)*(s[1]*A))],I=this.sourceImagery_[u][e];let r;w.bands&&(r=w.bands.map(function(m){return m-1}));let f;"nodata"in w&&w.nodata!==null?f=w.nodata:r?f=r.map(function(m){return p[u][m]}):f=p[u];const l={window:y,width:s[0],height:s[1],samples:r,fillValue:f,pool:b,interleave:!1};he(this.convertToRGB_,I)?i[u]=I.readRGB(l):i[u]=I.readRasters(l);const c=a+u,_=this.sourceMasks_[u][e];if(!_){i[c]=Promise.resolve(null);continue}i[c]=_.readRasters({window:y,width:s[0],height:s[1],samples:[0],pool:b,interleave:!1})}return Promise.all(i).then(this.composeTile_.bind(this,s)).catch(function(u){throw D(u),u})}composeTile_(e,t){const o=this.metadata_,s=this.sourceInfo_,a=this.sourceImagery_.length,i=this.bandCount,p=this.samplesPerPixel_,T=this.nodataValues_,b=this.normalize_,u=this.addAlpha_,w=e[0]*e[1],A=w*i;let y;b?y=new Uint8Array(A):y=new Float32Array(A);let I=0;for(let r=0;r<w;++r){let f=u;for(let l=0;l<a;++l){const c=s[l];let _=c.min,m=c.max,v,M;if(b){const h=o[l][0];_===void 0&&(h&&K in h?_=parseFloat(h[K]):_=Ie(t[l][0])),m===void 0&&(h&&L in h?m=parseFloat(h[L]):m=be(t[l][0])),v=255/(m-_),M=-_*v}for(let h=0;h<p[l];++h){const d=t[l][h][r];let g;if(b?g=Z(v*d+M,0,255):g=d,!u)y[I]=g;else{let P=c.nodata;if(P===void 0){let k;c.bands?k=c.bands[h]-1:k=h,P=T[l][k]}const x=isNaN(P);(!x&&d!==P||x&&!isNaN(d))&&(f=!1,y[I]=g)}I++}if(!f){const h=a+l,d=t[h];d&&!d[0][r]&&(f=!0)}}u&&(f||(y[I]=255),I++)}return y}}$.prototype.getView;const Ae=$,R=new Ae({normalize:!1,sources:[{url:"https://data.mundialis.de/geodata/lulc-germany/classification_2020/classification_map_germany_2020_v02.tif"},{url:"https://data.mundialis.de/geodata/lulc-germany/classification_2016/classification_map_germany_2016_v0_1.tif"}]});R.setAttributions('&copy; <a href="https://www.mundialis.de/">mundialis</a> dl-by-de/2.0, <a href="https://data.mundialis.de/geonetwork/srv/eng/catalog.search#/metadata/db130a09-fc2e-421d-95e2-1575e7c4b45c">2016</a>, <a href="https://data.mundialis.de/geonetwork/srv/eng/catalog.search#/metadata/9246503f-6adf-460b-a31e-73a649182d07">2020</a>');const F={10:"forest",20:"low vegetation",30:"water",40:"built-up",50:"bare soil",60:"agriculture"},O=n=>n=="diff"?{color:["case",["==",["band",1],["band",2]],[0,0,0,0],["all",["==",["band",1],10],["!=",["band",2],10]],[30,240,0,1],["all",["==",["band",2],10],["!=",["band",1],10]],[240,10,0,1],["all",["==",["band",1],40],["!=",["band",2],40]],[255,255,255,1],[0,0,0,0]]}:{color:["interpolate",["linear"],["band",n==="2020"?1:2],0,[0,0,0,0],10,[4,135,29],20,[137,222,137],30,[14,10,214],40,[229,109,109],50,[180,180,77],60,[231,231,25],255,[0,0,0,0]]},z=new ee({style:O("diff"),source:R}),Te=new Q({target:"map",layers:[z],view:R.getView()}),Pe=document.getElementById("output");function Se(n){const e=z.getData(n.pixel);if(!e)return;let t="";e[0]&&e[1]&&(e[0]!==e[1]?t=`Change | 2016: ${F[e[1]]} => 2020: ${F[e[0]]}`:t=`Unchanged | 2016 & 2020: ${F[e[0]]}`),Pe.textContent=t}Te.on(["pointermove","click"],Se);const N=document.getElementById("year");N.addEventListener("change",()=>{let n=O(N.value);z.setStyle(n)});
